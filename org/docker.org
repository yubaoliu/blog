#+EXPORT_FILE_NAME: 2019-08-29-docker.html
#+TITLE: Docker
#+KEYWORDS: 
#+OPTIONS: body-only:t
#+subtitle: 

* Docker CE
 [[https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-using-the-repository][Doccker CE]]
- Uninstall old versions

#+begin_src 
sudo apt-get remove docker docker-engine docker.io containerd runc
#+end_src

- SET UP THE REPOSITORY
#+begin_src 
sudo apt-get update
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo apt-key fingerprint 0EBFCD88
sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"

sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io
#+end_src
* Compose
    #+begin_src 
    sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
    sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
    
    #Test
    docker-compose --version
    #+end_src
* nvidia-docker
[[https://github.com/NVIDIA/nvidia-docker][nvidia-docker]]

Ubuntu will install docker.io by default which isn't the latest version of Docker Engine. This implies that you will need to pin the version of nvidia-docker. See more information here.

If you have nvidia-docker 1.0 installed: we need to remove it and all existing GPU containers

#+begin_src  sh
docker volume ls -q -f driver=nvidia-docker | xargs -r -I{} -n1 docker ps -q -a -f volume={} | xargs -r docker rm -f
sudo apt-get purge -y nvidia-docker
#+end_src

Add the package repositories
#+begin_src sh
curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | \
  sudo apt-key add -

distribution=$(. /etc/os-release;echo $ID$VERSION_ID)

curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | \
  sudo tee /etc/apt/sources.list.d/nvidia-docker.list

sudo apt-get update
#+end_src

#+RESULTS:

Install nvidia-docker2 and reload the Docker daemon configuration
#+begin_src sh
sudo apt-get install -y nvidia-docker2
sudo pkill -SIGHUP dockerd
#+end_src

Test nvidia-smi:
#+begin_src sh
docker run --runtime=nvidia --rm nvidia/cuda:9.0-base nvidia-smi
#+end_src

* Install command completion
Place the completion script in /etc/bash_completion.d/.
    #+begin_src 
     sudo curl -L https://raw.githubusercontent.com/docker/compose/1.24.0/contrib/completion/bash/docker-compose -o /etc/bash_completion.d/docker-compose
    #+end_src
* Add your user to the docker group
    #+begin_src 
    sudo usermod -aG docker $USER
    docker run hello-world    
    #+end_src

* Test hello-world
    #+begin_src 
    sudo docker run hello-world
    #+end_src
* Dockerfile
#+begin_src sh
FROM ubuntu:16.04
MAINTAINER caffe-maint@googlegroups.com

#+end_src
* Qiniu
当前镜像仓库推送地址为：

reg.qiniu.com/yubao/镜像名称:镜像版本

1. 手动操作 Docker 客户端登录镜像仓库地址:reg.qiniu.com
#+begin_example
docker login reg.qiniu.com -u <用户名> -p <密码>
#+end_example

2. 推送镜像前需要将 Docker 镜像重设置为正确的镜像仓库资源标识, 例如:
#+begin_example
docker tag helloworld-go:demo reg.qiniu.com/yubao/helloworld-go:demo
#+end_example

3. 执行 docker push 推送镜像, 例如:
#+begin_example
docker push reg.qiniu.com/yubao/helloworld-go:demo
#+end_example
