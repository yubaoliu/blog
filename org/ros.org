#+STARTUP: showall
#+STARTUP: hidestars
#+LAYOUT: post
#+AUTHOR: Yubao Liu
#+CATEGORIES: default
#+TITLE: ROS
#+DESCRIPTION: post
#+TAGS: ros
#+TOC: nil
#+OPTIONS: H:2 num:t tags:t toc:nil timestamps:nil email:t date:t body-only:t
#+DATE: 2019-11-04 Mon 10:50:02
#+EXPORT_FILE_NAME: 2019-11-04-ros.org.html
#+TOC: headlines 3
#+TOC: listings
#+TOC: tables

* Common Used Commands
- dependences
#+begin_example
rosdep install -r --from-paths .
#+end_example
* Resources
** 中国大学MOOC---《机器人操作系统入门》
- [[https://www.bilibili.com/video/av24585414/?p=7&t=231][ROS机器人操作系统入门-中国大学MOOC]]
- [[https://github.com/sychaichangkun/ROS-Academy-for-Beginners.git][《机器人操作系统入门》课程讲义-Github]]
- [[https://github.com/DroidAITech][重德智能-github]]
- [[https://www.bilibili.com/video/av24585414/?p=7][Bilibili Vedio]]
- [[https://github.com/ethz-asl/programming_guidelines/wiki][ethz-asl/programming_guidelines]]
  [[https://www.youtube.com/watch?v=0BxVPCInS3M][Youtube]]
** Projects
- [[https://github.com/leggedrobotics/ros_best_practices][leggedrobotics/ros_best_practices]]
- [[https://github.com/ros/common_tutorials][ros/common_tutorials]]
- [[https://bitbucket.org/osrf/servicesim][servicesim]]
- [[https://bitbucket.org/osrf/][OpenSourceRoboticsFoundation OSRF]]
* How to
** Export images in bag file

#+begin_src sh
Install image_view
sudo apt-get install mjpegtools
#+end_src

#+CAPTION: Export_bag_to_images
#+begin_src cpp
<launch>
  <node pkg="rosbag" type="play" name="rosbag" required="true" args="$(find image_view)/test.bag"/>
  <node name="extract" pkg="image_view" type="extract_images" respawn="false" required="true" output="screen" cwd="ROS_HOME">
    <remap from="image" to="/camera/image_raw"/>
  </node>
</launch>
#+end_src

Replase =/camera/image_raw= to the image topic you want to export. Take kinect for example: =<remap from="image" to="/kinect2/qhd/image_color"/>
=.

Check result: =~/.ros/frame*.jpg=

* ROS master and slave
** Firewall Setting
#+begin_src sh
sudo ufw allow 22
sudo ufw allow 11311
#+end_src

** Problem: no contents in topic
slave:

#+begin_src sh
 rostopic pub -r10 /hello std_msgs/String "hello world"
#+end_src

master:
#+begin_src sh
rostopic echo /hello
#+end_src

No contents received. 

**Solution**:
Disable firewall:
#+begin_src sh
sudo ufw disable
#+end_src
or
#+begin_src sh
sudo ufw reset
sudo ufw default allow
#+end_src

* Install ROS 
** Kinetic
#+BEGIN_SRC shell
    sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
    sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116

    sudo apt-get install ros-kinetic-desktop-full

    sudo rosdep init
    rosdep update

    echo "source /opt/ros/kinetic/setup.bash" >> ~/.bashrc
    source ~/.bashrc

    sudo apt install python-rosinstall python-rosinstall-generator python-wstool build-essential
#+END_SRC

* TF
** Debug TF
#+begin_example
rosrun tf view_frames
rosrun tf tf_echo /camera_rgb_optical_frame  /world
rosrun tf tf_monitor
roswtf
#+end_example
** Methods of Transformer
- LookupTransform
Get the transform between two coordinate frames
- CanTransform
Test if a transform is possible between two coordinate frames

For both tf data types and message datatypes.
- TransformPoint
- TransformVecor
- TransformPose
- TransformQuaternion
- transformPointcloud

- WaitForTransform
Block until timeout or transform is available
- tf::MessageFilter

* ROS foundationals
** Create Package
#+begin_src sh
 catkin_create_pkg point_cloud std_msgs rospy roscpp  roslib geometry_msgs message_runtime message_generation cv_bridge tf
#+end_src
** *Important Notes*
- make sure *anaconda* is not installed, it may cause uncertain errors
  later. I encountered many unkown problems when compile SLAM and
  kinetic. And not use anaconda to install Python. Then install anaconda
  after everything works fun (not add anaconda to $PATH is
  renewcommand).

- Select proper Linux Version

According to [[http://wiki.ros.org/kinetic/Installation][ROS Kinetic
installation instructions]],

#+BEGIN_QUOTE
  ROS Kinetic installation instructions

  These instructions will install the *ROS Kinetic Kame* distribution,
  which is available for Ubuntu Wily (15.10) and Ubuntu Xenial (16.04
  LTS), among other platform options.
#+END_QUOTE

** gazebo
Upgrade gazebo:

#+BEGIN_SRC sh
    sudo sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list'
    wget http://packages.osrfoundation.org/gazebo.key -O - | sudo apt-key add -
    sudo apt-get update
    sudo apt-get install gazebo7
#+END_SRC

** Shell Environment

#+BEGIN_SRC sh
    #ROS
    source /opt/ros/kinetic/setup.bash
    source ~/catkin_ws/devel/setup.sh
#+END_SRC

** Commands
   :PROPERTIES:
   :CUSTOM_ID: commands
   :END:

*** catkin_create_pkg
#+BEGIN_SRC sh
    cd src/
    catkin_create_pkg Test roscpp rospy std_msgs nav_msgs
#+END_SRC

*** rospack list
#+BEGIN_SRC sh
    rospack list | grep catkin_ws
    source devel/setup.sh
#+END_SRC

*** rospack
#+BEGIN_SRC sh
    rospack find robot_sim_demo
#+END_SRC

*** rosls

#+BEGIN_SRC sh
    rosls topic_demo
#+END_SRC

*** rosed

#+BEGIN_SRC sh
    rosed topic_demo CMakeLists.txt
#+END_SRC

*** roscd

#+BEGIN_SRC sh
    roscd topic_demo
#+END_SRC

*** roslaunch

#+BEGIN_SRC sh
    roslaunch [pkg_name] [file_name.launch]
#+END_SRC

*** master

start ros master, rosout, parameter server:

#+BEGIN_SRC sh
    roscore
#+END_SRC

*** node

#+BEGIN_SRC sh
    rosrun [pkg_name] [node_name]
    rosnode list
    rosnode info [node_name]
    rosnode kill [node_name]
#+END_SRC

*** rostopic

#+BEGIN_SRC sh
    rostopic list
    rostopic info /topic_name
    rostopic echo /topic_name
    rostopic pub /topic_name
#+END_SRC

*** rosmsg

#+BEGIN_SRC sh
    rosmsg list
    rosmsg show /msg_name
#+END_SRC

*** rosservice

#+BEGIN_SRC sh
    rosservice list
    rosservice info service_name
    rosservice call service_name args
#+END_SRC

*** rossrv

#+BEGIN_SRC sh
    rossrv list
    rossrv show srv_name
#+END_SRC

*** rosparam

#+BEGIN_SRC sh
    rosparam list
    rosparam get param_key
    rosparam set param_key param_value
    rosparam dump file_name
    rosparam load file_name
    rosparam delete param_key
#+END_SRC

*** rosbag
    :PROPERTIES:
    :CUSTOM_ID: rosbag
    :END:

#+BEGIN_SRC sh
    rosbag record <topic-names>
    rosbag record -a
    rosbag play <bag-files>
#+END_SRC

** Communication

- Topic
- Message (msg)
- Service (srv)
- parameter server
- Action

#+CAPTION: topic-vs-service
[[https://i.imgur.com/S9VF64i.png]]

** Tools

- gazebo (OSRF) ODE
- RViz
- rqt
  - rqt_graph
  - rqt_plot
  - rqt_console

- rosbag
- TF (TransForm)

#+CAPTION: ros-link-fram
[[https://i.imgur.com/fTCBJv4.png]]

- URDF(Unified Robot Description Format)

** Client Library
   :PROPERTIES:
   :CUSTOM_ID: client-library
   :END:

- roscpp
- rospy
- roslisp

** SLAMs IN ROS
   :PROPERTIES:
   :CUSTOM_ID: slams-in-ros
   :END:

- Gmapping
- 

* robot_sim_demo
  :PROPERTIES:
  :CUSTOM_ID: robot_sim_demo
  :END:

[[https://github.com/DroidAITech][重德智能-github]]

** Download anc Make
   :PROPERTIES:
   :CUSTOM_ID: download-anc-make
   :END:

#+BEGIN_SRC sh
    cd ~/catkin_ws/src
    git clone https://github.com/DroidAITech/ROS-Academy-for-Beginners.git
    cd ~/catkin_ws
    rosdep install --from-paths src --ignore-src --rosdistro=kinetic -y
    catkin_make
    source ~/catkin_ws/devel/setup.bash
#+END_SRC

** How to use
   :PROPERTIES:
   :CUSTOM_ID: how-to-use
   :END:

#+BEGIN_SRC shell
    $ rospack profile
    $ roslaunch robot_sim_demo robot_spawn.launch

    yubao@yubao-Z370M-S01:~/catkin_ws/src/ROS-Academy-for-Beginners$ rosnode list
    /cmd_vel_mux
    /gazebo
    /gazebo_gui
    /mobile_base_nodelet_manager
    /rosout
    /xbot/robot_state_publisher
    /xbot/spawner

    yubao@yubao-Z370M-S01:~/catkin_ws/src/ROS-Academy-for-Beginners$ rosnode info /cmd_vel_mux
    --------------------------------------------------------------------------------
    Node [/cmd_vel_mux]
    Publications:
     * /mobile_base_nodelet_manager/bond [bond/Status]
     * /rosout [rosgraph_msgs/Log]

    Subscriptions:
     * /clock [rosgraph_msgs/Clock]
     * /mobile_base_nodelet_manager/bond [bond/Status]

    Services:
     * /cmd_vel_mux/get_loggers
     * /cmd_vel_mux/set_logger_level


    contacting node http://yubao-Z370M-S01:40381/ ...
    Pid: 20597
    Connections:
     * topic: /rosout
        * to: /rosout
        * direction: outbound
        * transport: TCPROS
     * topic: /mobile_base_nodelet_manager/bond
        * to: /cmd_vel_mux
        * direction: outbound
        * transport: INTRAPROCESS
     * topic: /mobile_base_nodelet_manager/bond
        * to: /mobile_base_nodelet_manager
        * direction: outbound
        * transport: TCPROS
     * topic: /clock
        * to: /gazebo (http://yubao-Z370M-S01:45907/)
        * direction: inbound
        * transport: TCPROS
     * topic: /mobile_base_nodelet_manager/bond
        * to: /cmd_vel_mux (http://yubao-Z370M-S01:40381/)
        * direction: inbound
        * transport: INTRAPROCESS
     * topic: /mobile_base_nodelet_manager/bond
        * to: /mobile_base_nodelet_manager (http://yubao-Z370M-S01:42755/)
        * direction: inbound
        * transport: TCPROS
#+END_SRC

Control:

#+BEGIN_SRC sh
    ~/catkin_ws/src/ROS-Academy-for-Beginners$ rosrun robot_sim_demo robot_keyboard_teleop.py

    Control The Robot!
    ---------------------------
    Moving around:
       u    i    o
       j    k    l
       m    ,    .

    q/z : increase/decrease max speeds by 10%
    w/x : increase/decrease only linear speed by 10%
    e/c : increase/decrease only angular speed by 10%
    space key, k : force stop
    anything else : stop smoothly

    CTRL-C to quit

    currently:  speed 0.2   turn 1
#+END_SRC

Add Image view;

#+BEGIN_SRC sh
     rosrun image_view image_view image:=/camera/rgb/image_raw
#+END_SRC

* Robots
- [[http://www.willowgarage.com/][willowgarage]]

** PR2
#+CAPTION: pr2
[[https://i.imgur.com/9TaafSl.png]]
#+BEGIN_SRC sh
    roslaunch pr2_bringup pr2.launch
#+END_SRC
* ROS in Practice
** cv_camera
   :PROPERTIES:
   :CUSTOM_ID: cv_camera
   :END:

cv_camera uses OpenCV capture object to capture camera image. This
supports camera_image and nodelet.

- [[http://wiki.ros.org/cv_camera][cv_camera-row wiki]]
- [[https://answers.ros.org/question/197651/how-to-install-a-driver-like-usb_cam/][how
  to install a driver like usb camera]]

Usage:

#+BEGIN_SRC sh
    rosparam set cv_camera/device_id 0
    rosrun cv_camera cv_camera_node
#+END_SRC

** =usb_cam=
#+BEGIN_SRC sh
    sudo apt-get install ros-kinetic-usb-cam

    yubao@yubao-Z370M-S01:~$ rosrun usb_cam usb_cam_node

    yubao@yubao-Z370M-S01:~$ rostopic list
    /rosout
    /rosout_agg
    /usb_cam/camera_info
    /usb_cam/image_raw
    /usb_cam/image_raw/compressed
    /usb_cam/image_raw/compressed/parameter_descriptions
    /usb_cam/image_raw/compressed/parameter_updates
    /usb_cam/image_raw/compressedDepth
    /usb_cam/image_raw/compressedDepth/parameter_descriptions
    /usb_cam/image_raw/compressedDepth/parameter_updates
    /usb_cam/image_raw/theora
    /usb_cam/image_raw/theora/parameter_descriptions
    /usb_cam/image_raw/theora/parameter_updates

    $rosrun rviz rviz
#+END_SRC

#+CAPTION: usb camera
[[https://i.loli.net/2019/02/12/5c62abc8e7d30.png]]

** Usb camera from sources

#+BEGIN_SRC sh
    cd catkin_ws/src
    git clone https://github.com/bosch-ros-pkg/usb_cam.git
    cd ../
    catkin_make

    rosdep install camera_calibration
    rosmake camera_calibration

    roslaunch usb_cam usb-cam-test.launch
#+END_SRC

Result:

#+CAPTION: Usb Camera Image
[[https://i.loli.net/2019/02/21/5c6e4d07ede90.png]]

** Camera calibration
   :PROPERTIES:
   :CUSTOM_ID: camera-calibration
   :END:

- [[http://wiki.ros.org/camera_calibration/Tutorials/MonocularCalibration][How
  to Calibrate a Monocular Camera]]

#+BEGIN_SRC sh
    yubao@yubao-Z370M-S01:~/catkin_ws/src/ethzasl_ptam$ rosrun cv_camera cv_camera_node
    [ INFO] [1549972546.088217763]: using default calibration URL
    [ INFO] [1549972546.088422601]: camera calibration URL: file:///home/yubao/.ros/camera_info/camera.yaml
    [ INFO] [1549972546.088650628]: Unable to open camera calibration file [/home/yubao/.ros/camera_info/camera.yaml]
    [ WARN] [1549972546.088742036]: Camera calibration file /home/yubao/.ros/camera_info/camera.yaml not found.
#+END_SRC

#+BEGIN_SRC sh
    rosrun camera_calibration cameracalibrator.py --size 8x6 --square 0.025 image:=/usb_cam/image_raw camera:=/usb_cam
#+END_SRC

* FlexBe
** Install
- Install guide:  http://philserver.bplaced.net/fbe/download.php

** How to use
#+begin_example
roslaunch flexbe_app  flexbe_full.launch
#+end_example
** No behaviors and no states shown

The common problem is no behaviors and states detected by =flexbe_app=.

[[post:flexbe_issue.png]]

Solution:

#+begin_example

#+end_example


* Erros
** OpenCV version conflict
#+begin_example
/usr/bin/ld: warning: libopencv_imgcodecs.so.3.2, needed by /opt/ros/melodic/lib/libcv_bridge.so, may conflict with libopencv_imgcodecs.so.3.3
/usr/bin/ld: warning: libopencv_core.so.3.3, needed by /usr/lib/libopencv_imgcodecs.so.3.3.1, may conflict with libopencv_core.so.3.2
/usr/bin/ld: warning: libopencv_imgproc.so.3.3, needed by /usr/lib/libopencv_imgcodecs.so.3.3.1, may conflict with libopencv_imgproc.so.3.2
[100%] Built target monocular_person_following_node
#+end_example


