#+STARTUP: showall
#+STARTUP: hidestars
#+LAYOUT: post
#+AUTHOR: Yubao Liu
#+CATEGORIES: programming
#+TITLE: 
#+DESCRIPTION: post
#+TAGS: python
#+TOC: nil
#+OPTIONS: H:2 num:t tags:t toc:nil timestamps:nil email:t date:t body-only:t
#+DATE: 2019-09-08 日 15:28:26
#+EXPORT_FILE_NAME: 2019-09-08-python.html
#+TOC: headlines 3
#+TOC: listings
#+TOC: tables
* Template
** Header
#+begin_src python

#+end_src
* How to
** Add relative pateh to /import/
#+begin_src python
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'include'))
#+end_src
** Use python3 grammer
#+begin_src python
from __future__ import division
from __future__ import print_function
#+end_src

** Select /CUDA/ or /CPU/ in torch
#+begin_src python
self.device = torch.device("cuda:0" if torch.cuda.is_available() else "cpu")  # GPU: device=cuda
#+end_src
* OpenCV
** imread
#+begin_src python
  import cv2
  path = '/home/yubao/data/blog/img/lena.jpg'
  img = cv2.imread(path, -1)
  if img is None:
      print "img has no data"
#+end_src


* Anaconda
** Overview

- [anaconda official site](https://www.anaconda.com/)
Support system: MacOS, Linux, Windows
Python: 2.7 and 3.7
- [Conda User Guide](https://www.anaconda.com/)

** Install

## Ubuntu
### Get Anaconda
Download Anaconda from official website.
### installation
```bash
sudo chmod 755 Anaconda2-5.3.1-Linux-x86_64.sh
./Anaconda2-5.3.1-Linux-x86_64.sh
```
### Possible Problems
1 Error: Please make sure you are connected to internet"error during installation of VSCode part.

**Reason**:

​	VSCode Marketplace is currently down.

```sh
Anaconda is partnered with Microsoft! Microsoft VSCode is a streamlined
code editor with support for development operations like debugging, task
running and version control.

To install Visual Studio Code, you will need:
  - Administrator Privileges
  - Internet connectivity

Visual Studio Code License: https://code.visualstudio.com/license

Do you wish to proceed with the installation of Microsoft VSCode? [yes|no]
>>>
```

**Solution:**

​	Download and install it from [Visual Studio Code on Linux](https://code.visualstudio.com/docs/setup/linux)

```sh
sudo dpkg -i <file>.deb
sudo apt-get install -f # Install dependencies
```

​	Reboot linux and reinstall anaconda.

```
To install Visual Studio Code, you will need:
  - Administrator Privileges
  - Internet connectivity

Visual Studio Code License: https://code.visualstudio.com/license

Do you wish to proceed with the installation of Microsoft VSCode? [yes|no]
>>> yes
Proceeding with installation of Microsoft VSCode
VSCode is already installed!
```

** Anaconda Navigator
- **What is [Anaconda Navigator](https://docs.anaconda.com/anaconda/navigator/)**?
Anaconda Navigator is a desktop graphical user interface (GUI) included in Anaconda® distribution that allows you to launch applications and easily manage conda packages, environments and channels without using command-line commands. Navigator can search for packages on Anaconda Cloud or in a local Anaconda Repository. It is available for Windows, macOS and Linux.

- run in **Linux**
Open a Terminal window and type **anaconda-navigator**.
#+begin_src bash
$ source ~/anaconda3/bin/activate root
$ anaconda-navigator
#+end_src

- Create new environment
click *Create*  button
- Install packages (e.g. OpenCV)

- Install **Notebook**
`Home` > `Virtual Environment channels` >`Jupyter Notebook`

** Managing Environments

*** Create a new environment

We will name the environment `snowflakes` and install the package BioPython. At the Anaconda Prompt or in your Terminal window, type the following:

```sh
conda create --name snowflakes biopython
```
*** Active

To use, or “activate” the new environment, type the following:

> - Windows: `activate snowflakes`
> - Linux and macOS: `source activate snowflakes`

*** Deactive

Change your current environment back to the default (base):

> - Windows: `deactivate`
> - Linux, macOS: `source deactivate`

*** List environments

```sh
conda info --envs
```

## Uninstall env

```
conda env remove --name []
```
## Managing Python

Create a new environment named “snakes” that contains Python 3.5:

```
conda create --name snakes python=3.5
```

## Managing packages

## conda search

Check to see if a package you have not installed named “beautifulsoup4” is available from the Anaconda repository (must be connected to the Internet):

```
conda search beautifulsoup4
```

##Install package

Install this package into the current environment:

```
conda install beautifulsoup4
```

##List all installed program

Check to see if the newly installed program is in this environment:

```sh
conda list
```

** Error Lists
## Conflict when installing ROS or OpenCV
For Example:

This is an error encountered when compile ORB_SLAM2 for ROS:

```sh
  yubao@yubao-Z370M-S01:~/GitProject/ORB_SLAM2/Examples/ROS/ORB_SLAM2/build$ make
  Scanning dependencies of target rospack_genmsg_libexe
  [  0%] Built target rospack_genmsg_libexe
  Scanning dependencies of target rosbuild_precompile
  [  0%] Built target rosbuild_precompile
  Scanning dependencies of target RGBD
  [ 11%] Building CXX object CMakeFiles/RGBD.dir/src/ros_rgbd.cc.o
  [ 22%] Linking CXX executable ../RGBD
  /opt/ros/kinetic/lib/x86_64-linux-gnu/libopencv_imgcodecs3.so.3.3.1: undefined reference to \`TIFFReadRGBAStrip@LIBTIFF_4.0\'
  /opt/ros/kinetic/lib/x86_64-linux-gnu/libopencv_imgcodecs3.so.3.3.1: undefined reference to \`TIFFReadDirectory@LIBTIFF_4.0\'
  /opt/ros/kinetic/lib/x86_64-linux-gnu/libopencv_imgcodecs3.so.3.3.1: undefined reference to \`TIFFWriteEncodedStrip@LIBTIFF_4.0\'
  ....
  /opt/ros/kinetic/lib/x86_64-linux-gnu/libopencv_imgcodecs3.so.3.3.1: undefined reference to \`TIFFSetWarningHandler@LIBTIFF_4.0\'
  /opt/ros/kinetic/lib/x86_64-linux-gnu/libopencv_imgcodecs3.so.3.3.1: undefined reference to \`TIFFSetErrorHandler@LIBTIFF_4.0\'
  collect2: error: ld returned 1 exit status
  CMakeFiles/RGBD.dir/build.make:216: recipe for target '../RGBD' failed
  make[2]: *** [../RGBD] Error 1
  CMakeFiles/Makefile2:67: recipe for target 'CMakeFiles/RGBD.dir/all' failed
  make[1]: *** [CMakeFiles/RGBD.dir/all] Error 2
  Makefile:127: recipe for target 'all' failed
  make: *** [all] Error 2
```

**REASON**:

Both conda and Linux system installed the same package, however, the different version.

**Solution**:
1. Remove the corresponding package from conda
2. Remove _/anaconda2/bin_  from PATH under the current terminal


```bash
yubao@yubao-Z370M-S01:~/Software/opencv/build$ echo $PATH
/usr/local/cuda/bin:/home/yubao/Software/KDevelop.AppImage:/home/yubao/Software/pycharm-community-2018.3.1/bin:/home/yubao/Software/node-v10.14.2-linux-x64/bin:/home/yubao/anaconda2/bin:/home/yubao/bin:/home/yubao/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
```


* Jupyter Notebook
[[https://jupyter-notebook-beginner-guide.readthedocs.io/en/latest/index.html][Jupyter/IPython Notebook Quick Start Guide]]
- Run
#+begin_src bash
jupyter notebook
#+end_src
* Grammer
** List
*** Shallow Copy
   #+begin_src python :results output
   a = [1, 2, 3]
   b = a
   b[1] =8
   print a
   #+end_src

   #+RESULTS:
   : [1, 8, 3]
   : hello

   
* Common Errors
** ImportError: cannot import name main
** Command "python setup.py egg_info" failed with error code 1
**Solution**:
#+begin_src python
pip install --upgrade setuptools
python -m pip install --upgrade pip
#+end_src


cd /usr/bin
sudo vim pip

#+begin_src 
from pip import main
if __name__ == '__main__':
    sys.exit(main())
#+end_src
to =>
#+begin_src 
from pip import __main__
if __name__ == '__main__':
    sys.exit(__main__._main())
#+end_src

** No module named google.protobuf.internal
- pip install protobuf
- conda install protobuf
** Pip: Import Error:cannot import name main
- Solution 1:
#+begin_src bash
sudo gedit /usr/bin/pip

change:
from pip import main
to:
from pip._internal import main
#+end_src
- Solution 2:
#+begin_src bash
sudo gedit /usr/bin/pip

from:

from pip import main
if __name__ == '__main__':
    sys.exit(main())
to:
from pip import __main__
if __name__ == '__main__':
    sys.exit(__main__._main())
#+end_src
