#+STARTUP: showall
#+STARTUP: hidestars
#+LAYOUT: post
#+AUTHOR: Yubao Liu
#+CATEGORIES: default
#+TITLE:  Conda
#+DESCRIPTION: post
#+TAGS: anaconda, conda
#+TOC: nil
#+OPTIONS: H:2 num:t tags:t toc:nil timestamps:nil email:t date:t body-only:t
#+DATE: 2019-10-20 Sun 10:30:32
#+EXPORT_FILE_NAME: 2019-10-20-anaconda.org.html
#+TOC: headlines 3
#+TOC: listings
#+TOC: tables

* Overview
- [[https://www.anaconda.com/][anaconda official site]] Support system:
  MacOS, Linux, Windows Python: 2.7 and 3.7
- [[https://www.anaconda.com/][Conda User Guide]]

* Install
** Ubuntu
*** Get Anaconda
Download Anaconda from official website. ### installation

#+BEGIN_SRC sh
    sudo chmod 755 Anaconda2-5.3.1-Linux-x86_64.sh
    ./Anaconda2-5.3.1-Linux-x86_64.sh
#+END_SRC

*** Possible Problems

1 Error: Please make sure you are connected to internet"error during
installation of VSCode part.

*Reason*:

​ VSCode Marketplace is currently down.

#+BEGIN_SRC sh
    Anaconda is partnered with Microsoft! Microsoft VSCode is a streamlined
    code editor with support for development operations like debugging, task
    running and version control.

    To install Visual Studio Code, you will need:
      - Administrator Privileges
      - Internet connectivity

    Visual Studio Code License: https://code.visualstudio.com/license

    Do you wish to proceed with the installation of Microsoft VSCode? [yes|no]
    >>>
#+END_SRC

*Solution:*

​ Download and install it from
[[https://code.visualstudio.com/docs/setup/linux][Visual Studio Code on
Linux]]

#+BEGIN_SRC sh
    sudo dpkg -i <file>.deb
    sudo apt-get install -f # Install dependencies
#+END_SRC

​ Reboot linux and reinstall anaconda.

#+BEGIN_EXAMPLE
    To install Visual Studio Code, you will need:
      - Administrator Privileges
      - Internet connectivity

    Visual Studio Code License: https://code.visualstudio.com/license

    Do you wish to proceed with the installation of Microsoft VSCode? [yes|no]
    >>> yes
    Proceeding with installation of Microsoft VSCode
    VSCode is already installed!
#+END_EXAMPLE

* Anaconda Navigator

- What is [[https://docs.anaconda.com/anaconda/navigator/][Anaconda
  Navigator]]*? Anaconda Navigator is a desktop graphical user interface
  (GUI) included in Anaconda® distribution that allows you to launch
  applications and easily manage conda packages, environments and
  channels without using command-line commands. Navigator can search for
  packages on Anaconda Cloud or in a local Anaconda Repository. It is
  available for Windows, macOS and Linux.

- run in *Linux* Open a Terminal window and type *anaconda-navigator*.
  [[./images/Anaconda/Anaconda_Navigation.png]]

- Create new environment click /Create/ button
  [[file:images/Anaconda/Create_new_environment.png]]
- Install packages (e.g. OpenCV)
  [[file:images/Anaconda/Install_packages_in_anaconda.png]]

- Install *Notebook* =Home= > =Virtual Environment channels=
  >=Jupyter Notebook= [[file:images/Anaconda/Install_Notebook.png]]

* Managing Environments
*Create a new environment*

We will name the environment =snowflakes= and install the package
BioPython. At the Anaconda Prompt or in your Terminal window, type the
following:

#+BEGIN_SRC sh
    conda create --name snowflakes biopython
#+END_SRC

** Active
   :PROPERTIES:
   :CUSTOM_ID: active
   :END:

To use, or "activate" the new environment, type the following:

#+BEGIN_QUOTE

  - Windows: =activate snowflakes=
  - Linux and macOS: =source activate snowflakes=
#+END_QUOTE

** Deactive
   :PROPERTIES:
   :CUSTOM_ID: deactive
   :END:

Change your current environment back to the default (base):

#+BEGIN_QUOTE

  - Windows: =deactivate=
  - Linux, macOS: =source deactivate=
#+END_QUOTE

** List environments
   :PROPERTIES:
   :CUSTOM_ID: list-environments
   :END:

#+BEGIN_SRC sh
    conda info --envs
#+END_SRC

** Uninstall env
   :PROPERTIES:
   :CUSTOM_ID: uninstall-env
   :END:

#+BEGIN_EXAMPLE
    conda env remove --name []
#+END_EXAMPLE

** Managing Python
   :PROPERTIES:
   :CUSTOM_ID: managing-python
   :END:

Create a new environment named "snakes" that contains Python 3.5:

#+BEGIN_EXAMPLE
    conda create --name snakes python=3.5
#+END_EXAMPLE

** Managing packages
   :PROPERTIES:
   :CUSTOM_ID: managing-packages
   :END:

** conda search
   :PROPERTIES:
   :CUSTOM_ID: conda-search
   :END:

Check to see if a package you have not installed named "beautifulsoup4"
is available from the Anaconda repository (must be connected to the
Internet):

#+BEGIN_EXAMPLE
    conda search beautifulsoup4
#+END_EXAMPLE

##Install package

Install this package into the current environment:

#+BEGIN_EXAMPLE
    conda install beautifulsoup4
#+END_EXAMPLE

##List all installed program

Check to see if the newly installed program is in this environment:

#+BEGIN_SRC sh
    conda list
#+END_SRC

* Error Lists
** Conflict when installing ROS or OpenCV
   :PROPERTIES:
   :CUSTOM_ID: conflict-when-installing-ros-or-opencv
   :END:

For Example:

This is an error encountered when compile ORB_SLAM2 for ROS:

#+BEGIN_SRC sh
      yubao@yubao-Z370M-S01:~/GitProject/ORB_SLAM2/Examples/ROS/ORB_SLAM2/build$ make
      Scanning dependencies of target rospack_genmsg_libexe
      [  0%] Built target rospack_genmsg_libexe
      Scanning dependencies of target rosbuild_precompile
      [  0%] Built target rosbuild_precompile
      Scanning dependencies of target RGBD
      [ 11%] Building CXX object CMakeFiles/RGBD.dir/src/ros_rgbd.cc.o
      [ 22%] Linking CXX executable ../RGBD
      /opt/ros/kinetic/lib/x86_64-linux-gnu/libopencv_imgcodecs3.so.3.3.1: undefined reference to \`TIFFReadRGBAStrip@LIBTIFF_4.0\'
      /opt/ros/kinetic/lib/x86_64-linux-gnu/libopencv_imgcodecs3.so.3.3.1: undefined reference to \`TIFFReadDirectory@LIBTIFF_4.0\'
      /opt/ros/kinetic/lib/x86_64-linux-gnu/libopencv_imgcodecs3.so.3.3.1: undefined reference to \`TIFFWriteEncodedStrip@LIBTIFF_4.0\'
      ....
      /opt/ros/kinetic/lib/x86_64-linux-gnu/libopencv_imgcodecs3.so.3.3.1: undefined reference to \`TIFFSetWarningHandler@LIBTIFF_4.0\'
      /opt/ros/kinetic/lib/x86_64-linux-gnu/libopencv_imgcodecs3.so.3.3.1: undefined reference to \`TIFFSetErrorHandler@LIBTIFF_4.0\'
      collect2: error: ld returned 1 exit status
      CMakeFiles/RGBD.dir/build.make:216: recipe for target '../RGBD' failed
      make[2]: *** [../RGBD] Error 1
      CMakeFiles/Makefile2:67: recipe for target 'CMakeFiles/RGBD.dir/all' failed
      make[1]: *** [CMakeFiles/RGBD.dir/all] Error 2
      Makefile:127: recipe for target 'all' failed
      make: *** [all] Error 2
#+END_SRC

*REASON*:

Both conda and Linux system installed the same package, however, the
different version.

*Solution*: 1. Remove the corresponding package from conda 2. Remove
//anaconda2/bin/ from PATH under the current terminal

#+BEGIN_SRC sh
    yubao@yubao-Z370M-S01:~/Software/opencv/build$ echo $PATH
    /usr/local/cuda/bin:/home/yubao/Software/KDevelop.AppImage:/home/yubao/Software/pycharm-community-2018.3.1/bin:/home/yubao/Software/node-v10.14.2-linux-x64/bin:/home/yubao/anaconda2/bin:/home/yubao/bin:/home/yubao/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
#+END_SRC
** Jupter: Access to the file was deniedThe file at ...
#+begin_example
Access to the file was deniedThe file at file:///home/yubao/.local/share/jupyter/runtime/nbserver-14786-open.html is not readable. It may have been removed, moved, or file permissions may be preventing access.
ERR_ACCESS_DENIED
#+end_example

My environment:
- ubuntu 16.04


Solution
#+begin_export 
pip install notebook==5.6.0
#+end_export



