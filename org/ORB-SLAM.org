#+STARTUP: showall
#+STARTUP: hidestars
#+LAYOUT: post
#+AUTHOR: Yubao Liu
#+CATEGORIES: slam
#+TITLE: ORB SLAM
#+DESCRIPTION: post
#+TAGS: orb slam2
#+TOC: nil
#+OPTIONS: H:2 num:t tags:t toc:nil timestamps:nil email:t date:t body-only:t
#+DATE: 2019-09-28 土 19:16:17
#+EXPORT_FILE_NAME: 2019-09-28-ORB-SLAM.html
#+TOC: headlines 3
#+TOC: listings
#+TOC: tables
* Introduction
This paper presents ORB-SLAM, a feature-based monocular simultaneous localization and mapping (SLAM) system that operates in real time, in small and large indoor and outdoor environments.

The system is robust to severe motion clutter, allows wide baseline loop closing and relocalization, and includes full automatic initialization.

Building on excellent algorithms of recent years, we designed from scratch a novel system that uses the same features for all SLAM tasks:

- tracking,
- mapping,
- relocalization,
- and loop closing.

 A survival of the fittest strategy that selects the points and keyframes of the reconstruction leads to excellent robustness and generates a compact and trackable map that only grows if the scene content changes, allowing lifelong operation. We present an exhaustive evaluation in 27 sequences from the most popular datasets. ORB-SLAM achieves unprecedented performance with respect to other state-of-the-art monocular SLAM approaches. For the benefit of the community, we make the source code public. 
* Notes
** Twc
- 表示当前相机光心在世界坐标系下的三维坐标
- 表示从相机坐标系到世界坐标系的转化
$$P_w = T_{wc} * P_c$$
** Tcw
- 表示从世界坐标系到相机坐标系的转化
$$P_c = T_{cw} * P_w$$

* Build
** ROS Wrapper
#+begin_example
rosdep update
cd ORB_SLAM2/Examples/ROS/YB_ORB_SLAM/build
cmake ..
make
#+end_example

* Publish TF
[[https://github.com/raulmur/ORB_SLAM2/issues/597][Get Pose Information from ORBSLAM #597]]
** Method 1
#+begin_src cpp

#include"../../../include/System.h"

#include"../../../include/Converter.h"
#include <tf2_ros/transform_broadcaster.h>
#include <geometry_msgs/TransformStamped.h>
#include <tf2/LinearMath/Quaternion.h>
#include <tf/transform_listener.h>


    cv::Mat Tcw = mpSLAM->TrackRGBD(cv_ptrRGB->image,cv_ptrD->image,cv_ptrRGB->header.stamp.toSec());
    if(Tcw.empty())
        return;

   //publish TF
    static tf2_ros::TransformBroadcaster br;
    geometry_msgs::TransformStamped transformStamped;
    transformStamped.header.stamp = cv_ptrRGB->header.stamp;
    transformStamped.header.frame_id = "world";
    transformStamped.child_frame_id = "camera_pose";


    cv::Mat Rwc = Tcw.rowRange(0, 3).colRange(0,3).t(); // world to camera
    cv::Mat twc = -Rwc*Tcw.rowRange(0,3).col(3);

    vector<float> q = ORB_SLAM2::Converter::toQuaternion(Rwc);

    transformStamped.transform.translation.x = twc.at<float>(0);
    transformStamped.transform.translation.x = twc.at<float>(1);
    transformStamped.transform.translation.x = twc.at<float>(2);

    transformStamped.transform.rotation.x = q[0];
    transformStamped.transform.rotation.y = q[1];
    transformStamped.transform.rotation.z = q[2];
    transformStamped.transform.rotation.w = q[3];

    br.sendTransform(transformStamped);
#+end_src

** Method2
#+begin_example
 cv::Mat Twc = Tcw.inv();
 cv::Mat Rwc = Twc.rowRange(0, 3).colRange(0, 3);
cv::Mat twc = Twc.rowRange(0, 3).col(3);

#+end_example
* ORB-SLAM: a Versatile and Accurate Monocular SLAM System

** Abstract

This paper presents ORB-SLAM, a feature-based monocular simultaneous
localization and mapping (SLAM) system that operates in real time, in
small and large indoor and outdoor environments.

The system is robust to severe motion clutter, allows wide baseline loop
closing and relocalization, and includes full automatic initialization.

Building on excellent algorithms of recent years, we designed from
scratch a novel system that uses the same features for all SLAM tasks:

- tracking,
- mapping,
- relocalization,
- and loop closing.

A survival of the fittest strategy that selects the points and keyframes
of the reconstruction leads to excellent robustness and generates a
compact and trackable map that only grows if the scene content changes,
allowing lifelong operation. We present an exhaustive evaluation in 27
sequences from the most popular datasets. ORB-SLAM achieves
unprecedented performance with respect to other state-of-the-art
monocular SLAM approaches. For the benefit of the community, we make the
source code public.

* orb-slam2_with_semantic_label
[[https://github.com/yubaoliu/orb-slam2_with_semantic_label][Github]]

[[https://i.loli.net/2019/03/05/5c7e1f3c00e52.png]]
* Resources

- [[https://www.cnblogs.com/shang-slam/p/6733322.html][ORB-SLAM跑通笔记本摄像头]]
  环境：Ubuntu 14.04 + ROS indigo + ORB-SLAM2 (Thinkpad T460s)
- [[http://www.cnblogs.com/luyb/p/5357790.html][路游侠blog 代码解读]]
