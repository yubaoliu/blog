#+STARTUP: showall
#+STARTUP: hidestars
#+LAYOUT: post
#+AUTHOR: Yubao Liu
#+CATEGORIES: default
#+TITLE: Kinect Camera Manual
#+DESCRIPTION: post
#+TOC: nil
#+OPTIONS: H:2 num:t tags:t toc:nil timestamps:nil email:t date:t
#+DATE: 2019-09-03 火 16:49:15
#+EXPORT_FILE_NAME: 2019-09-03-kinect-camera.html
#+TOC: headlines 3
#+TOC: listings
#+TOC: tables 

* Install libfreenect2
- [[https://github.com/OpenKinect/libfreenect2][Driver-OpenKinect/libfreenect2]]
- My Environment

#+BEGIN_SRC sh
yubao@yubao-Z370M-S01:~/GoogleDrive$ uname -a
Linux yubao-Z370M-S01 4.15.0-42-generic \#45~16.04.1-Ubuntu SMP Mon Nov 19 13:02:27 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux
#+END_SRC

#+BEGIN_SRC sh
    sudo apt-get install build-essential cmake pkg-config
    sudo apt-get install libusb-1.0-0-dev
    sudo apt-get install libturbojpeg libjpeg-turbo8-dev
  sudo apt-get install libglfw3-dev

#Optional
    sudo apt-get install beignet-dev
    sudo apt-get install libopenni2-dev

#Intel only
sudo apt-get install libva-dev libjpeg-dev

# Comiple from source code
    git clone https://github.com/OpenKinect/libfreenect2.git
    cd libfreenect2

    mkdir build && cd build
    cmake .. -DCMAKE_INSTALL_PREFIX=$HOME/freenect2
    make
    make install
#+END_SRC

** Possible Errors

*** kinect run error:Wrong JPEG library version
It tooks me one night to solve this error: - Error description

#+BEGIN_SRC sh
    yubao@yubao-Z370M-S01:~/Software/libfreenect2$ ./build/bin/Protonect
    Version: 0.2.0
    Environment variables: LOGFILE=<protonect.log>
    Usage: ./build/bin/Protonect [-gpu=<id>] [gl | cl | clkde | cuda | cudakde | cpu] [<device serial>]
            [-noviewer] [-norgb | -nodepth] [-help] [-version]
            [-frames <number of frames to process>]
    To pause and unpause: pkill -USR1 Protonect
    [Info] [Freenect2Impl] enumerating devices...
    [Info] [Freenect2Impl] 8 usb devices connected
    [Info] [Freenect2Impl] found valid Kinect v2 @2:3 with serial 006696152647
    [Info] [Freenect2Impl] found 1 devices
    Wrong JPEG library version: library is 90, caller expects 80
#+END_SRC

- Solution
  [[https://github.com/OpenKinect/libfreenect2/issues/1004][refer]]

#+BEGIN_SRC sh
    conda install jpeg=8
#+END_SRC

Remember to rebuild libfreenect2.
*** nvidia Jetson xavier

#+begin_example
nvidia@xavier:~/catkin_ws/src/libfreenect2/build$ cmake .. -DCMAKE_INSTALL_PREFIX=$HOME/freenect2
-- using tinythread as threading library
-- Checking for modules 'libva;libva-drm'
--   Found libva, version 1.1.0
--   Found libva-drm, version 1.1.0
CMake Warning at cmake_modules/FindTegraJPEG.cmake:17 (MESSAGE):
  Tegra drivers have wrong checksum:

  /usr/lib/aarch64-linux-gnu/libv4lconvert.so: FAILED

Call Stack (most recent call first):
  CMakeLists.txt:220 (FIND_PACKAGE)


-- Found Linux4Tegra 32.1.0
CMake Warning at cmake_modules/FindTegraJPEG.cmake:57 (MESSAGE):
  Linux4Tegra version (32.1.0) is not recognized.  Add the new source URL
  part to FindTegraJPEG.cmake.
Call Stack (most recent call first):
  CMakeLists.txt:220 (FIND_PACKAGE)


-- Could NOT find TegraJPEG (missing: TegraJPEG_INCLUDE_DIRS TegraJPEG_L4T_OK TegraJPEG_DRIVER_OK TegraJPEG_WORKS)
CMake Error at /usr/share/cmake-3.10/Modules/FindPackageHandleStandardArgs.cmake:137 (message):
  Could NOT find TurboJPEG (missing: TurboJPEG_INCLUDE_DIRS TURBOJPEG_WORKS)
Call Stack (most recent call first):
  /usr/share/cmake-3.10/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE)
  cmake_modules/FindTurboJPEG.cmake:66 (FIND_PACKAGE_HANDLE_STANDARD_ARGS)
  CMakeLists.txt:243 (FIND_PACKAGE)


-- Configuring incomplete, errors occurred!
See also "/home/nvidia/catkin_ws/src/libfreenect2/build/CMakeFiles/CMakeOutput.log".
#+end_example

Solution:

#+begin_example
sudo apt  install libturbojpeg*
#+end_example

* Install iai_kinect2
[[https://github.com/code-iai/iai_kinect2][iai_kinect2-Github]]

#+BEGIN_SRC sh
    cd ~/catkin_ws/src/
    git clone https://github.com/code-iai/iai_kinect2.git
    cd iai_kinect2
    rosdep install -r --from-paths .
    cd ~/catkin_ws
    catkin_make -DCMAKE_BUILD_TYPE="Release"
#+END_SRC

Connect your sensor and run kinect2_bridge:

#+BEGIN_SRC sh
    roslaunch kinect2_bridge kinect2_bridge.launch
#+END_SRC

* Test Kinect2

#+BEGIN_SRC sh
    (base) yubao@yubao-Z370M-S01:~/Software/libfreenect2/build$ ./bin/Protonect
    Version: 0.2.0
    Environment variables: LOGFILE=<protonect.log>
    Usage: ./bin/Protonect [-gpu=<id>] [gl | cl | clkde | cuda | cudakde | cpu] [<device serial>]
            [-noviewer] [-norgb | -nodepth] [-help] [-version]
            [-frames <number of frames to process>]
    To pause and unpause: pkill -USR1 Protonect
    [Info] [Freenect2Impl] enumerating devices...
    [Info] [Freenect2Impl] 8 usb devices connected
    [Info] [Freenect2Impl] found valid Kinect v2 @2:3 with serial 006696152647
    [Info] [Freenect2Impl] found 1 devices
    libva info: VA-API version 0.39.0
    libva info: va_getDriverName() returns -1
    libva error: va_getDriverName() failed with unknown libva error,driver_name=(null)
    [Error] [VaapiRgbPacketProcessorImpl] vaInitialize(display, &major_ver, &minor_ver): unknown libva error
    [Info] [Freenect2DeviceImpl] opening...
    [Info] [Freenect2DeviceImpl] transfer pool sizes rgb: 20*16384 ir: 60*8*33792
#+END_SRC

*Result:*

#+CAPTION: Kinetic2 Demo
https://i.imgur.com/Nfr92Dp.jpg

* Kinect2 Calibration
Refer:
- code-iai/=iai_kinect2=: https://github.com/code-iai/iai_kinect2/tree/master/kinect2_calibration
- kinect2的标定: https://www.cnblogs.com/li-yao7758258/p/7445429.html

* Ros Simulation - =iai_kinect2=
- [[https://github.com/code-iai/iai_kinect2][github]]

#+BEGIN_SRC sh
    sudo apt-get install ros-indigo-openni-camera
    sudo apt-get install ros-indigo-openni-launch
#+END_SRC

* Reference
- [[https://mahsaparsapour.wordpress.com/tutorials/kinect-2/][Mahsa mahsaparsapour]]
